import duplicateMocks from './mock-cms-duplicates.json';

// These types were generated by https://quicktype.io - they have a VSCode extenstion that makes it easy to paste over from our json mock and seems to do a really good job. By default it will export all types though and we probably want to avoid that and just export the const. We shouldn't have to maintain this long, just until we have the CMS up, so it's a shortcut to avoid manually typing all of this.

// The process is pretty much:
// 1. Modify the JSON file
// 2. Delete current types
// 3. Install the extension (or go to website) - copy JSON
// 4. Paste or use plugin to generate types. Name top type "MockCMS"
// 5. Remove `export` from generated types

// Generated by https://quicktype.io

interface MockCMS {
  contentByPage: ContentByPage;
  outcomes: Outcome[];
  resources: Resource[];
}

interface ContentByPage {
  CreateMethodology: CreateMethodology;
  CreateCreditClass: CreateCreditClass;
}

interface CreateCreditClass {
  footerLink: string;
  heroSection: Section;
  stepCardSection: CreateCreditClassStepCardSection;
  creditTypeSection: CreditTypeSection;
  outcomeSection: Section;
  bottomBanner: BottomBanner;
}

interface BottomBanner {
  title: string;
  description: string;
  btnText: string;
  href: string;
}

interface CreditTypeSection {
  title: string;
  subtitleTop: string;
  descriptionTop: string;
  subtitleBottom: string;
  descriptionBottom: string;
  institutionalCards: Card[];
  flexCreditCards: Card[];
}

interface Card {
  title: string;
  description: string;
  icon: string;
  tooltop?: string;
}

interface Section {
  title: string;
  description: string;
}

interface CreateCreditClassStepCardSection {
  title: string;
  mainDescription: string;
  stepCards: StepCard[];
}

interface StepCard {
  stepNumber: number;
  isActive: boolean;
  icon?: string;
  btnText?: string;
  tagName?: string;
  href?: string;
  title: string;
  description: string;
  faqs?: FAQ[];
}

interface FAQ {
  question: string;
  answer: string;
}

interface CreateMethodology {
  footerLink: string;
  heroSection: Section;
  stepCardSection: CreateMethodologyStepCardSection;
  peerReviewSection: BottomBanner;
  createCreditClassSection: BottomBanner;
}

interface CreateMethodologyStepCardSection {
  title: string;
  mainDescription: string;
  bottomTitle: string;
  bottomDescription: string;
  stepCards: StepCard[];
}

interface Outcome {
  imgSrc: string;
  title: string;
  description: string;
}

interface Resource {
  btnText: string;
  imgSrc: string;
  title: string;
  description: string;
  href: string;
  lastUpdated: string;
}

//@ts-ignore
const mock: MockCMS = duplicateMocks;

export const outcomes = mock.outcomes;
export const resources = mock.resources;
export const contentByPage = mock.contentByPage;
